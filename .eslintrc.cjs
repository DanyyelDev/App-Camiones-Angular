typescriptEslint = require('@typescript-eslint/eslint-plugin')

module.exports = {
  root: true,
  ignorePatterns: ['projects/**/*'],
  overrides: [
    {
      files: ['*.ts'],
      parserOptions: {
        project: './tsconfig.json',
      },
      extends: [
        'eslint:recommended',
        'plugin:@typescript-eslint/recommended',
        'plugin:@angular-eslint/recommended',
        'plugin:@angular-eslint/template/process-inline-templates',
      ],
      rules: {
        '@angular-eslint/directive-selector': [
          'error',
          {
            type: 'attribute',
            prefix: 'app',
            style: 'camelCase',
          },
        ],
        '@angular-eslint/component-selector': [
          'error',
          {
            type: 'element',
            prefix: 'app',
            style: 'kebab-case',
          },
        ],
        '@typescript-eslint/array-type': 'error',
        '@typescript-eslint/member-ordering': 'warn',
        '@typescript-eslint/naming-convention': [
          'error',
          ...[
            ...typescriptEslint.rules['naming-convention'].defaultOptions,
            {
              selector: 'enumMember',
              format: ['PascalCase'],
            },
          ],
        ],
        '@typescript-eslint/no-explicit-any': 'error',
        '@typescript-eslint/no-namespace': 'error',
        '@typescript-eslint/no-require-imports': 'error',
        '@typescript-eslint/no-unnecessary-boolean-literal-compare': 'error',
        '@typescript-eslint/no-unnecessary-condition': 'error',
        '@typescript-eslint/prefer-as-const': 'error',
        '@typescript-eslint/prefer-for-of': 'warn',
        '@typescript-eslint/prefer-nullish-coalescing': 'error',
        '@typescript-eslint/prefer-readonly': 'error',
        'no-unused-vars': 0,
        'interface-name-prefix': 'off',
        'no-empty-function': 'off',
        'no-explicit-any': 'off',
        'no-parameter-properties': 'off',
        'no-var-requires': 'off',
        'arrow-body-style': 'error',
        'arrow-parens': ['off', 'as-needed'],
        complexity: 'off',
        'constructor-super': 'error',
        curly: 'error',
        'eol-last': ['error', 'always'],
        eqeqeq: ['error', 'smart'],
        'function-call-argument-newline': ['error', 'consistent'],
        'guard-for-in': 'error',
        'id-blacklist': [
          'error',
          'any',
          'Number',
          'number',
          'String',
          'string',
          'Boolean',
          'boolean',
          'Undefined',
          'undefined',
        ],
        'id-match': 'error',
        'jsdoc/no-types': 'off',
        'max-classes-per-file': 'off',
        'new-parens': 'error',
        'no-bitwise': 'error',
        'no-caller': 'error',
        'no-cond-assign': 'error',
        'no-console': [
          'error',
          {
            allow: [
              'log',
              'warn',
              'dir',
              'timeLog',
              'assert',
              'clear',
              'count',
              'countReset',
              'group',
              'groupEnd',
              'table',
              'dirxml',
              'error',
              'groupCollapsed',
              'Console',
              'profile',
              'profileEnd',
              'timeStamp',
              'context',
            ],
          },
        ],
        'no-debugger': 'error',
        'no-empty': 'off',
        'no-eval': 'error',
        'no-fallthrough': 'error',
        'no-invalid-this': 'off',
        'no-magic-numbers': [
          'error',
          {
            ignore: [0],
          },
        ],
        'no-new-wrappers': 'error',
        'no-shadow': 'off',
        'no-throw-literal': 'error',
        'no-undef-init': 'error',
        'no-unsafe-finally': 'error',
        'no-unused-expressions': 'error',
        'no-unused-labels': 'error',
        'no-unused-private-class-members': 'error',
        'no-unused-vars': 'error',
        'object-shorthand': 'error',
        'one-var': ['error', 'never'],
        'quote-props': ['error', 'as-needed'],
        radix: 'error',
        'use-isnan': 'error',
        'valid-typeof': 'off',
      },
    },
    {
      files: ['*.html'],
      extends: [
        'plugin:@angular-eslint/template/recommended',
        'plugin:@angular-eslint/template/accessibility',
      ],
      rules: {},
    },
  ],
}
